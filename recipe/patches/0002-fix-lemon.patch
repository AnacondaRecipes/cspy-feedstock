From e219714ad2f64045ee9aeb7d3ed3926de77657c1 Mon Sep 17 00:00:00 2001
From: Lorenzo Pirritano <lpirritano@anaconda.com>
Date: Thu, 20 Jun 2024 21:27:04 +0200
Subject: [PATCH 2/2] fix lemon

---
 cmake/FindLEMON.cmake        | 13 +++++++------
 src/cc/CMakeLists.txt        |  2 +-
 src/cc/dotnet/CMakeLists.txt |  2 +-
 src/cc/python/CMakeLists.txt |  2 +-
 4 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/cmake/FindLEMON.cmake b/cmake/FindLEMON.cmake
index a3045d2..4a38afb 100644
--- a/cmake/FindLEMON.cmake
+++ b/cmake/FindLEMON.cmake
@@ -2,28 +2,29 @@ message(STATUS "Trying to find lemon")
 
 if(UNIX)
   set(LEMON_ROOT_DIR
-      "/usr/local"
+      ${PREFIX}
       CACHE PATH "LEMON root directory")
 else()
   set(LEMON_ROOT_DIR
-      "C:/Program Files (x86)/LEMON/"
+      ${PREFIX}
       CACHE PATH "LEMON root directory")
 endif(UNIX)
 
 find_path(LEMON_INCLUDE_DIR lemon/core.h
-          HINTS ${LEMON_ROOT_DIR}/include
-                "C:/Program Files (x86)/LEMON/include")
+          HINTS ${PREFIX}/include
+                "%LIBRARY_INC%")
 find_library(
   LEMON_LIBRARY
   NAMES lemon emon
-  HINTS ${LEMON_ROOT_DIR}/lib "C:/Program Files (x86)/LEMON/lib")
+  HINTS ${PREFIX}/lib "%LIBRARY_LIB%")
 
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(LEMON DEFAULT_MSG LEMON_LIBRARY
                                   LEMON_INCLUDE_DIR)
 
 if(LEMON_FOUND)
-  message(STATUS "Found LEMON: ${LEMON_INCLUDE_DIR}")
+  message(STATUS "Found lemon: ${LEMON_INCLUDE_DIR}")
+  message(STATUS "lemon lib: ${LEMON_LIBRARY}")
   set(LEMON_INCLUDE_DIRS ${LEMON_INCLUDE_DIR})
   set(LEMON_LIBRARIES ${LEMON_LIBRARY})
 endif(LEMON_FOUND)
diff --git a/src/cc/CMakeLists.txt b/src/cc/CMakeLists.txt
index cf16d04..56635ab 100644
--- a/src/cc/CMakeLists.txt
+++ b/src/cc/CMakeLists.txt
@@ -25,7 +25,7 @@ set_target_properties(
              PUBLIC_HEADER "${CMAKE_CURRENT_BINARY_DIR}/config.h"
              VERSION ${PROJECT_VERSION})
 
-target_link_libraries(BiDirectionalCpp PRIVATE LEMON::LEMON)
+target_link_libraries(BiDirectionalCpp PRIVATE lemon::lemon)
 
 add_library(${PROJECT_NAME}::BiDirectionalCpp ALIAS BiDirectionalCpp)
 
diff --git a/src/cc/dotnet/CMakeLists.txt b/src/cc/dotnet/CMakeLists.txt
index cd2b6c4..8f9fbe4 100644
--- a/src/cc/dotnet/CMakeLists.txt
+++ b/src/cc/dotnet/CMakeLists.txt
@@ -15,6 +15,6 @@ set_target_properties(
              SWIG_USE_TARGET_INCLUDE_DIRECTORIES ON
              POSITION_INDEPENDENT_CODE ON)
 
-target_link_libraries(BiDirectionalDotnet PRIVATE BiDirectionalCpp LEMON::LEMON)
+target_link_libraries(BiDirectionalDotnet PRIVATE BiDirectionalCpp lemon::lemon)
 target_include_directories(BiDirectionalDotnet
                            PRIVATE ${PROJECT_SOURCE_DIR}/src/cc)
diff --git a/src/cc/python/CMakeLists.txt b/src/cc/python/CMakeLists.txt
index 847a7e3..37698ff 100644
--- a/src/cc/python/CMakeLists.txt
+++ b/src/cc/python/CMakeLists.txt
@@ -29,7 +29,7 @@ elseif(UNIX)
     pyBiDirectionalCpp PROPERTIES INSTALL_RPATH
                                   "$ORIGIN:$ORIGIN/../../${PROJECT_NAME}/.libs")
 endif()
-target_link_libraries(pyBiDirectionalCpp PRIVATE BiDirectionalCpp LEMON::LEMON)
+target_link_libraries(pyBiDirectionalCpp PRIVATE BiDirectionalCpp lemon::lemon)
 
 # Variable PYTHON_LIBRARIES can contains keyword `optimized` which won't be
 # interpreted inside a generator expression. i.e. we can't use:
-- 
2.39.1

